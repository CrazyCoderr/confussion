{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/DishdetailComponent.js","redux/ActionCreaters.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/form.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","to","id","width","Menu","menu","dishes","map","key","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","resetformFeedback","postFeedback","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","RenderLeaders","leaders","list","RenderLeader","tag","left","middle","object","body","heading","About","title","Header","toggleNav","toggleModal","handleLogin","state","isNavOpen","isModalOpen","setState","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","onClick","height","isOpen","navbar","outline","toggle","innerRef","input","Footer","RenderDish","RenderComments","comments","postComment","dishId","cmnts","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","date","CommentForm","rating","defaultValue","DishDetail","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","message","actions","reset","feedback","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"oPAEaA,EAAU,WACnB,OACI,6BACI,0BAAMC,UAAU,oDAChB,2CCNCC,EAAU,yB,QCOvB,SAASC,EAAT,GAAmD,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QAEnC,OAAID,EAEI,kBAAC,EAAD,MAGCC,EAED,4BAAKA,GAKT,kBAAC,gBAAD,CAAeC,IAAE,EAACC,eAAiB,CAC/BC,cAAe,gCAEnB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASC,IAAKR,EAAUE,EAAKO,MAAOC,IAAKR,EAAKS,OAC9C,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAYT,EAAKS,MAChBT,EAAKU,YAAY,kBAAC,IAAD,KAAeV,EAAKU,aAA8B,KACpE,kBAAC,IAAD,SAAYV,EAAKW,YAAjB,QAyBDC,MAlBf,SAAcC,GACV,OACI,yBAAKhB,UAAU,aACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,qBACX,kBAACE,EAAD,CAAYC,KAAMa,EAAMC,KAAMb,UAAWY,EAAME,cAAeb,QAASW,EAAMG,iBAEjF,yBAAKnB,UAAU,qBACX,kBAACE,EAAD,CAAYC,KAAMa,EAAMI,UAAWhB,UAAWY,EAAMK,cAAehB,QAASW,EAAMM,iBAEtF,yBAAKtB,UAAU,qBACX,kBAACE,EAAD,CAAYC,KAAMa,EAAMO,OAAQnB,UAAWY,EAAMQ,eAAgBnB,QAASW,EAAMS,qB,OCzCpG,SAASC,EAAT,GAAmC,IAATT,EAAQ,EAARA,KACtB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMU,GAAE,gBAAWV,EAAKW,KACpB,kBAAC,IAAD,CAASC,MAAM,OAAOpB,IAAKR,EAASgB,EAAKP,MAAOC,IAAKM,EAAKL,OAC1D,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAW,gCAASK,EAAKL,UAQ7C,IAkDekB,EAlDF,SAACd,GACV,IAAMe,EAAOf,EAAMgB,OAAOA,OAAOC,KAAI,SAAChB,GAClC,OACI,yBAAKiB,IAAKjB,EAAKW,GAAI5B,UAAU,uBACzB,kBAAC0B,EAAD,CAAgBT,KAAMA,QAKlC,OAAID,EAAMgB,OAAO5B,UAET,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPgB,EAAMgB,OAAO3B,QAEd,yBAAKL,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,4BAAKgB,EAAMgB,OAAO3B,YAQlC,yBAAKL,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAM2B,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBQ,QAAM,GAAtB,SAEJ,yBAAKnC,UAAU,UACX,oCACA,+BAGR,yBAAKA,UAAU,OACV+B,K,eCzDXK,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IACvDC,EAAY,SAACD,GAAD,OAAS,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IACpDE,EAAW,SAACL,GAAD,OAAUM,MAAMC,OAAOP,KAClCQ,EAAa,SAACR,GAAD,MAAS,4CAA4CS,KAAKT,IA2M9DU,E,kDAvMX,WAAY/B,GAAQ,IAAD,8BACf,cAAMA,IACDgC,aAAe,EAAKA,aAAaC,KAAlB,gBAFL,E,gDAKnB,SAAaC,GACTC,KAAKnC,MAAMoC,oBACXD,KAAKnC,MAAMqC,aAAaH,K,oBAK5B,WAAU,IAAD,OAGL,OACI,yBAAMlD,UAAU,aACZ,yBAAKA,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAM2B,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBQ,QAAM,GAAtB,eAEJ,yBAAKnC,UAAU,UACX,0CACA,+BAIR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACX,sDAGJ,yBAAKA,UAAU,+BACX,2CACA,6DAC6B,6BAD7B,2BAE4B,6BAF5B,YAGa,6BACT,uBAAGA,UAAU,gBACb,uBAAGA,UAAU,gBALjB,mBAKmD,6BAC/C,uBAAGA,UAAU,cANjB,mBAMiD,6BAC7C,uBAAGA,UAAU,mBAPjB,KAOwC,uBAAGsD,KAAK,6BAAR,wBAI5C,yBAAKtD,UAAU,+BACX,oDAGJ,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,YAAYuD,KAAK,SAC5B,uBAAGA,KAAK,SAASvD,UAAU,kBAAkBsD,KAAK,oBAAmB,uBAAGtD,UAAU,gBAAlF,SACA,uBAAGuD,KAAK,SAASvD,UAAU,eAAesD,KAAK,KAAI,uBAAGtD,UAAU,gBAAhE,UACA,uBAAGuD,KAAK,SAASvD,UAAU,kBAAkBsD,KAAK,6BAA4B,uBAAGtD,UAAU,qBAA3F,aAOZ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACX,sDAEJ,yBAAKA,UAAU,mBACX,kBAAC,OAAD,CAAMwD,MAAQ,WAAWC,SAAU,SAACP,GAAD,OAAY,EAAKF,aAAaE,KAC7D,kBAAC,IAAD,CAAKlD,UAAU,cACX,kBAAC,IAAD,CAAO0D,QAAQ,YAAYC,GAAI,GAA/B,cACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQC,KAAT,CAAcJ,MAAM,aAAa5B,GAAG,YAAYhB,KAAK,YACjDiD,YAAY,aACZ7D,UAAU,eACV8D,WAAY,CACR1B,WAAUK,UAAWA,EAAU,GAAIF,UAAWA,EAAU,OAGhE,kBAAC,SAAD,CACIvC,UAAU,cACVwD,MAAM,aACNO,KAAK,UACLC,SAAU,CACN5B,SAAU,WACVK,UAAW,oCACXF,UAAW,qCAK3B,kBAAC,IAAD,CAAKvC,UAAU,cACX,kBAAC,IAAD,CAAO0D,QAAQ,WAAWC,GAAI,GAA9B,aACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQC,KAAT,CAAcJ,MAAM,YAAY5B,GAAG,WAAWhB,KAAK,WAC/CiD,YAAY,YACZ7D,UAAU,eACV8D,WAAY,CACR1B,WAAUK,UAAWA,EAAU,GAAIF,UAAWA,EAAU,OAGhE,kBAAC,SAAD,CACIvC,UAAU,cACVwD,MAAM,YACNO,KAAK,UACLC,SAAU,CACN5B,SAAU,WACVK,UAAW,oCACXF,UAAW,qCAK3B,kBAAC,IAAD,CAAKvC,UAAU,cACX,kBAAC,IAAD,CAAO0D,QAAQ,SAASC,GAAI,GAA5B,gBACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQC,KAAT,CAAcJ,MAAM,UAAU5B,GAAG,SAAShB,KAAK,SAC3CiD,YAAY,cACZ7D,UAAU,eACV8D,WAAY,CACR1B,WAAUK,UAAWA,EAAU,GAAIF,UAAWA,EAAU,IAAKG,cAGrE,kBAAC,SAAD,CACI1C,UAAU,cACVwD,MAAM,UACNO,KAAK,UACLC,SAAU,CACN5B,SAAU,WACVK,UAAW,iCACXF,UAAW,6BACXG,SAAU,wBAK1B,kBAAC,IAAD,CAAK1C,UAAU,cACX,kBAAC,IAAD,CAAO0D,QAAQ,QAAQC,GAAI,GAA3B,SACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQC,KAAT,CAAcJ,MAAM,SAAS5B,GAAG,QAAQhB,KAAK,QACzCiD,YAAY,QACZ7D,UAAU,eACV8D,WAAY,CACR1B,WAAUS,gBAGlB,kBAAC,SAAD,CACI7C,UAAU,cACVwD,MAAM,SACNO,KAAK,UACLC,SAAU,CACN5B,SAAU,WACVS,WAAY,8BAK5B,kBAAC,IAAD,CAAK7C,UAAU,cACX,kBAAC,IAAD,CAAK2D,GAAI,CAAEM,KAAM,EAAGC,OAAQ,IACxB,yBAAKlE,UAAU,cACX,kBAAC,IAAD,CAAOmE,OAAK,GACR,kBAAC,UAAQC,SAAT,CAAkBZ,MAAM,SACpB5C,KAAK,QACLZ,UAAU,qBAHlB,IAGyC,IACrC,0DAIZ,kBAAC,IAAD,CAAK2D,GAAI,CAAEM,KAAM,EAAGC,OAAQ,IACxB,kBAAC,UAAQG,OAAT,CAAgBb,MAAM,eAAe5C,KAAK,cACtCZ,UAAU,gBACV,wCACA,4CAIZ,kBAAC,IAAD,CAAKA,UAAU,cACX,kBAAC,IAAD,CAAO0D,QAAQ,UAAUC,GAAI,GAA7B,iBACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQW,SAAT,CAAkBd,MAAM,YAAY5B,GAAG,UAAUhB,KAAK,UAClD2D,KAAK,KACLvE,UAAU,mBAGtB,kBAAC,IAAD,CAAKA,UAAU,cACX,kBAAC,IAAD,CAAK2D,GAAI,CAAEM,KAAM,GAAIC,OAAQ,IACzB,kBAAC,IAAD,CAAQM,KAAK,SAASC,MAAM,WAA5B,2B,GA1LdC,aCLtB,SAASC,EAAT,GAAuD,IAA/BC,EAA8B,EAA9BA,QAASxE,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,QACxC,OAAID,EAEI,kBAAC,EAAD,MAGCC,EAED,4BAAKA,GAKL,kBAAC,IAAD,CAAOwE,MAAI,GACP,kBAAC,UAAD,CAASvE,IAAE,GACNsE,EAAQ3C,KAAI,SAACV,GAAD,OAAY,kBAAC,OAAD,CAAMjB,IAAE,GAAC,kBAACwE,EAAD,CAAc5C,IAAKX,EAAOK,GAAIL,OAAQA,UAS5F,SAASuD,EAAT,GAAmC,IAAXvD,EAAU,EAAVA,OACpB,OACI,yBAAKW,IAAKX,EAAOK,GAAI5B,UAAU,eAC3B,kBAAC,IAAD,CAAO+E,IAAI,MACP,kBAAC,IAAD,CAAOC,MAAI,EAACC,QAAM,GACd,kBAAC,IAAD,CAAOC,QAAM,EAACzE,IAAKR,EAAQsB,EAAOb,MAAOC,IAAKY,EAAOX,QAEzD,kBAAC,IAAD,CAAOuE,MAAI,EAACnF,UAAU,QAClB,kBAAC,IAAD,CAAOoF,SAAO,GAAE7D,EAAOX,MACvB,2BAAIW,EAAOV,aACX,2BAAIU,EAAOT,gBA0EhBuE,MAlEf,SAAerE,GAEX,IAAM4D,EAAU,kBAACD,EAAD,CAAeC,QAAS5D,EAAM4D,QAAQA,QAClDxE,UAAWY,EAAM4D,QAAQxE,UACzBC,QAASW,EAAM4D,QAAQvE,UAE3B,OACI,yBAAKL,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAM2B,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBQ,QAAM,GAAtB,aAEJ,yBAAKnC,UAAU,UACX,wCACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACX,2CACA,waACA,6EAAkD,8CAAlD,iIAEJ,yBAAKA,UAAU,mBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYA,UAAU,yBAAtB,qBACA,kBAAC,IAAD,KACI,wBAAIA,UAAU,WACV,wBAAIA,UAAU,SAAd,WACA,wBAAIA,UAAU,SAAd,eACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,wBACA,wBAAIA,UAAU,SAAd,cACA,wBAAIA,UAAU,SAAd,aACA,wBAAIA,UAAU,SAAd,UAKhB,yBAAKA,UAAU,UACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUA,UAAU,YAChB,gCAAYA,UAAU,cAClB,uBAAGA,UAAU,QAAb,qFAEA,4BAAQA,UAAU,qBAAlB,cACI,0BAAMsF,MAAM,gBAAZ,0EAQxB,yBAAKtF,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEH4E,KCOFW,E,kDA/GX,WAAYvE,GAAQ,IAAD,8BACf,cAAMA,IAEDwE,UAAY,EAAKA,UAAUvC,KAAf,gBACjB,EAAKwC,YAAc,EAAKA,YAAYxC,KAAjB,gBACnB,EAAKyC,YAAc,EAAKA,YAAYzC,KAAjB,gBACnB,EAAK0C,MAAQ,CACTC,WAAW,EACXC,aAAa,GARF,E,6CAYnB,WACI1C,KAAK2C,SAAS,CACVF,WAAYzC,KAAKwC,MAAMC,c,yBAI/B,WACIzC,KAAK2C,SAAS,CACVD,aAAc1C,KAAKwC,MAAME,gB,yBAIjC,SAAYE,GACR5C,KAAKsC,cACLO,MAAM,aAAe7C,KAAK8C,SAASC,MAAQ,aAAe/C,KAAKgD,SAASD,MACtE,YAAc/C,KAAKiD,SAASC,SAC9BN,EAAMO,mB,oBAIV,WAAU,IAAD,OACL,OACI,6BACI,kBAAC,IAAD,CAAQC,MAAI,EAACC,OAAO,MAChB,yBAAKxG,UAAU,aACX,kBAAC,IAAD,CAAeyG,QAAStD,KAAKqC,YAC7B,kBAAC,IAAD,CAAaxF,UAAU,UAAUsD,KAAK,KAAI,yBAAK7C,IAAI,yBAAyBiG,OAAO,KAAK7E,MAAM,KAAKlB,IAAI,2BACvG,kBAAC,IAAD,CAAUgG,OAAQxD,KAAKwC,MAAMC,UAAWgB,QAAM,GAC1C,kBAAC,IAAD,CAAKA,QAAM,GACP,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAS5G,UAAU,WAAW2B,GAAG,SAC7B,0BAAM3B,UAAU,qBADpB,UAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASA,UAAU,WAAW2B,GAAG,YAC7B,0BAAM3B,UAAU,qBADpB,cAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASA,UAAU,WAAW2B,GAAG,SAC7B,0BAAM3B,UAAU,qBADpB,UAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASA,UAAU,WAAW2B,GAAG,cAC7B,0BAAM3B,UAAU,6BADpB,iBAKR,kBAAC,IAAD,CAAKA,UAAU,UAAU4G,QAAM,GAC3B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,SAAO,EAACJ,QAAStD,KAAKsC,aAC1B,0BAAMzF,UAAU,wBADpB,eAQpB,kBAAC,IAAD,KACI,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,mBACX,qDACA,yLAKhB,kBAAC,IAAD,CAAO2G,OAAUxD,KAAKwC,MAAME,YAAaiB,OAAQ3D,KAAKsC,aAClD,kBAAC,IAAD,CAAaqB,OAAQ3D,KAAKsC,aAA1B,SACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMhC,SAAUN,KAAKuC,aACjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOhC,QAAQ,YAAf,YACA,kBAAC,IAAD,CAAOc,KAAK,OAAO5C,GAAG,WAAWhB,KAAK,WAAWmG,SAAU,SAACC,GAAD,OAAW,EAAKf,SAAWe,MAE1F,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOtD,QAAQ,YAAf,YACA,kBAAC,IAAD,CAAOc,KAAK,WAAW5C,GAAG,WAAWhB,KAAK,WAAWmG,SAAU,SAACC,GAAD,OAAW,EAAKb,SAAWa,MAE9F,kBAAC,IAAD,CAAW7C,OAAK,GACZ,kBAAC,IAAD,CAAOA,OAAK,GACR,kBAAC,IAAD,CAAOK,KAAK,WAAW5D,KAAK,WAAWmG,SAAU,SAACC,GAAD,OAAW,EAAKZ,SAAWY,KADhF,gBAKJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQxC,KAAK,SAAS0B,MAAM,SAASzB,MAAM,WAA3C,kB,GAtGXC,aC+CNuC,MAhDf,SAAgBjG,GACZ,OACA,yBAAKhB,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,2BACX,qCACA,wBAAIA,UAAU,iBACd,4BAAI,kBAAC,IAAD,CAAM2B,GAAG,SAAT,SACA,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,cAAT,iBAGZ,yBAAK3B,UAAU,kBACX,2CACA,6DACqB,6BADrB,2BAEoB,6BAFpB,YAGK,6BACT,uBAAGA,UAAU,sBAJT,mBAIiD,6BACrD,uBAAGA,UAAU,oBALT,mBAK+C,6BACnD,uBAAGA,UAAU,yBANT,KAMsC,uBAAGsD,KAAK,6BAAR,wBAI1C,yBAAKtD,UAAU,qCACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,iCAAiCsD,KAAK,uBAAsB,uBAAGtD,UAAU,uBAA6B,KACnH,uBAAGA,UAAU,mCAAmCsD,KAAK,2CAA0C,uBAAGtD,UAAU,oBAA0B,KACtI,uBAAGA,UAAU,mCAAmCsD,KAAK,+BAA8B,uBAAGtD,UAAU,oBAA0B,KAC1H,uBAAGA,UAAU,kCAAkCsD,KAAK,uBAAsB,uBAAGtD,UAAU,mBAAyB,KAChH,uBAAGA,UAAU,iCAAiCsD,KAAK,uBAAsB,uBAAGtD,UAAU,mBAAyB,KAC/G,uBAAGA,UAAU,sBAAsBsD,KAAK,WAAU,uBAAGtD,UAAU,yBAI3E,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,YACX,6BACA,6EChCduC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IACvDJ,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAGrC,SAAS4E,EAAT,GAA+B,IAATjG,EAAQ,EAARA,KAClB,OAAY,MAARA,EAEI,yBAAKjB,UAAU,uBACX,kBAAC,gBAAD,CAAeM,IAAE,EACbC,eAAgB,CACZC,cAAe,gCAEnB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASqB,MAAM,OAAOpB,IAAKR,EAAUgB,EAAKP,MAAOC,IAAKM,EAAKL,OAC3D,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAW,4BAAKK,EAAKL,OACrB,kBAAC,IAAD,KAAWK,EAAKH,iBAQhC,8BAIZ,SAASqG,EAAT,GAA4D,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,OAC7C,GAAgB,MAAZF,EACA,OAAQ,8BAEZ,IAAMG,EAAQH,EAASnF,KAAI,SAAAuF,GACvB,OACI,kBAAC,OAAD,CAAMlH,IAAE,GACR,wBAAI4B,IAAKsF,EAAQ5F,IACb,2BAAI4F,EAAQA,SACZ,iCAAOA,EAAQC,OAAf,SAEK,IAAIC,KAAKC,eAAe,QAAS,CAC9BC,KAAM,UACNC,MAAO,QACPC,IAAK,YACNC,OAAO,IAAIC,KAAKR,EAAQS,aAM3C,OACI,yBAAKjI,UAAU,uBACX,0CACA,wBAAIA,UAAU,iBACV,kBAAC,UAAD,CAASM,IAAE,GACViH,IAGL,kBAAC,EAAD,CAAaD,OAAQA,EAAQD,YAAaA,K,IAKhDa,E,kDAEF,WAAYlH,GAAQ,IAAD,8BACf,cAAMA,IAEDyE,YAAc,EAAKA,YAAYxC,KAAjB,gBACnB,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBAEpB,EAAK0C,MAAQ,CACTE,aAAa,GAPF,E,gDAYnB,SAAa3C,GACTC,KAAKnC,MAAMqG,YAAYlE,KAAKnC,MAAMsG,OAAQpE,EAAOiF,OAAQjF,EAAOuE,OAAQvE,EAAOsE,W,yBAGnF,WACIrE,KAAK2C,SAAS,CACVD,aAAc1C,KAAKwC,MAAME,gB,oBAIjC,WAAU,IAvFKrD,EAuFN,OACL,OACI,yBAAKxC,UAAU,aACX,kBAAC,IAAD,CAAQ6G,SAAO,EAACJ,QAAStD,KAAKsC,aAC1B,0BAAMzF,UAAU,uBADpB,mBAGA,kBAAC,IAAD,CAAO2G,OAAQxD,KAAKwC,MAAME,YAAaiB,OAAQ3D,KAAKsC,aAChD,kBAAC,IAAD,CAAaqB,OAAQ3D,KAAKsC,aAA1B,kBACA,kBAAC,IAAD,KACI,kBAAC,YAAD,CAAWhC,SAAU,SAACP,GAAD,OAAY,EAAKF,aAAaE,KAE/C,kBAAC,IAAD,CAAKlD,UAAU,cACX,kBAAC,IAAD,CAAO0D,QAAQ,UAAf,UACA,kBAAC,UAAQW,OAAT,CAAgBb,MAAM,UAAU5C,KAAK,SACjCZ,UAAU,eAAe8D,WAAY,CAAE1B,YAAYgG,aAAa,KAChE,4BAAQlC,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,kBAEJ,kBAAC,SAAD,CACIlG,UAAU,cACVwD,MAAM,UACNO,KAAK,UACLC,SAAU,CACN5B,SAAU,eAKtB,kBAAC,IAAD,CAAKpC,UAAU,cACX,kBAAC,IAAD,CAAO0D,QAAQ,YAAf,aACA,kBAAC,UAAQE,KAAT,CAAcJ,MAAM,UAAU5B,GAAG,SAAShB,KAAK,SAC3CiD,YAAY,YACZ7D,UAAU,eACV8D,WAAY,CACRrB,WA7HrBD,EA6H0C,EA7HlC,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IA6HOD,UAAWA,EAAU,OAGtD,kBAAC,SAAD,CACIvC,UAAU,cACVwD,MAAM,YACNO,KAAK,UACLC,SAAU,CACNvB,UAAW,oCACXF,UAAW,oCAMvB,kBAAC,IAAD,CAAKvC,UAAU,cACX,kBAAC,IAAD,CAAO0D,QAAQ,WAAf,WACA,kBAAC,UAAQY,SAAT,CAAkBd,MAAM,WAAW5B,GAAG,UAAUhB,KAAK,UACjD2D,KAAK,IACLvE,UAAU,kBAGlB,kBAAC,IAAD,CAAKA,UAAU,cACX,kBAAC,IAAD,CAAQwE,KAAK,SAASC,MAAM,WAA5B,mB,GArFNC,aAgJX2D,EA/CI,SAACrH,GAGhB,OAAIA,EAAMZ,UAEF,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPgB,EAAMX,QAEP,yBAAKL,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAKgB,EAAMX,WAMJ,MAAdW,EAAMC,KAEP,yBAAKjB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAM2B,GAAG,SAAT,SAChB,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAMA,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBQ,QAAM,GAAEnB,EAAMC,KAAKL,OAEvC,yBAAKZ,UAAU,UACX,4BAAKgB,EAAMC,KAAKL,MAChB,+BAGR,yBAAKZ,UAAU,OACX,kBAACkH,EAAD,CAAYjG,KAAMD,EAAMC,OACxB,kBAACkG,EAAD,CAAgBC,SAAUpG,EAAMoG,SAC5BC,YAAarG,EAAMqG,YACnBC,OAAQtG,EAAMC,KAAKW,YAlBlC,G,eC7HIV,EAAgB,iBAAO,CAChCsD,KCnE0B,mBDsEjB8D,EAAe,SAACC,GAAD,MAAc,CACtC/D,KCtEyB,gBDuEzBgE,QAASD,IAGAE,EAAY,SAACzG,GAAD,MAAa,CAClCwC,KC1EsB,aD2EtBgE,QAASxG,IAuBA0G,EAAiB,SAACH,GAAD,MAAc,CACxC/D,KCjG2B,kBDkG3BgE,QAASD,IAGAI,EAAc,SAACvB,GAAD,MAAe,CACtC5C,KCvGwB,eDwGxBgE,QAASpB,IA0BA/F,EAAgB,iBAAO,CAChCmD,KCjI0B,mBDoIjBoE,EAAe,SAACL,GAAD,MAAc,CACtC/D,KCnIyB,gBDoIzBgE,QAASD,IAGAM,EAAY,SAACC,GAAD,MAAa,CAClCtE,KCzIsB,aD0ItBgE,QAASM,IA0BAtH,EAAiB,iBAAO,CACjCgD,KCnK2B,oBDsKlBuE,EAAgB,SAACR,GAAD,MAAc,CACvC/D,KCrK0B,iBDsK1BgE,QAASD,IAGAS,EAAa,SAACpE,GAAD,MAAc,CACpCJ,KC3KuB,iBD4KvBgE,QAAS5D,I,QEnJPqE,E,uKAEJ,WACE9F,KAAKnC,MAAMkI,cACX/F,KAAKnC,MAAMmI,gBACXhG,KAAKnC,MAAMoI,cACXjG,KAAKnC,MAAMqI,iB,oBAGb,WAAU,IAAD,OA+BP,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,kBAAD,KACE,kBAAC,gBAAD,CAAenH,IAAKiB,KAAKnC,MAAMsI,SAASpH,IAAKqH,WAAW,OAAOC,QAAS,KAC1E,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAnCT,WACf,OACE,kBAAC,EAAD,CACEzI,KAAM,EAAKD,MAAMgB,OAAOA,OAAO2H,QAAO,SAAC1I,GAAD,OAAUA,EAAK2I,YAAU,GAC/D1I,cAAe,EAAKF,MAAMgB,OAAO5B,UACjCe,cAAe,EAAKH,MAAMgB,OAAO3B,QACjCe,UAAW,EAAKJ,MAAM6I,WAAWA,WAAWF,QAAO,SAACG,GAAD,OAAWA,EAAMF,YAAU,GAC9EvI,cAAe,EAAKL,MAAM6I,WAAWzJ,UACrCkB,cAAe,EAAKN,MAAM6I,WAAWxJ,QACrCkB,OAAQ,EAAKP,MAAM4D,QAAQA,QAAQ+E,QAAO,SAACpI,GAAD,OAAYA,EAAOqI,YAAU,GACvEpI,eAAgB,EAAKR,MAAM4D,QAAQxE,UACnCqB,eAAgB,EAAKT,MAAM4D,QAAQvE,aAyBnC,kBAAC,IAAD,CAAOoJ,KAAK,WAAWC,UAAW,kBAAM,kBAAC,EAAD,CAAO9E,QAAS,EAAK5D,MAAM4D,aACnE,kBAAC,IAAD,CAAOmF,OAAK,EAACN,KAAK,QAAQC,UAAW,kBAAM,kBAAC,EAAD,CAAM1H,OAAQ,EAAKhB,MAAMgB,YACpE,kBAAC,IAAD,CAAOyH,KAAK,gBAAgBC,UAtBf,SAAC,GAAe,IAAbM,EAAY,EAAZA,MACpB,OACE,kBAAC,EAAD,CACE5J,UAAW,EAAKY,MAAMgB,OAAO5B,UAC7BC,QAAS,EAAKW,MAAMgB,OAAO3B,QAC3BY,KAAM,EAAKD,MAAMgB,OAAOA,OAAO2H,QAAO,SAAC1I,GAAD,OAAUA,EAAKW,KAAOqI,SAASD,EAAME,OAAO5C,OAAQ,OAAK,GAC/F6C,gBAAiB,EAAKnJ,MAAMoG,SAAS/G,QACrC+G,SAAU,EAAKpG,MAAMoG,SAASA,SAASuC,QAAO,SAACnC,GAAD,OAAaA,EAAQF,SAAW2C,SAASD,EAAME,OAAO5C,WACpGD,YAAa,EAAKrG,MAAMqG,iBAexB,kBAAC,IAAD,CAAOoC,KAAK,aAAaC,UAAY,kBAAM,kBAAC,EAAD,CAASrG,aAAc,EAAKrC,MAAMqC,aAAcD,kBAAmB,EAAKpC,MAAMoC,uBACzH,kBAAC,IAAD,CAAUzB,GAAG,aAIf,kBAAC,EAAD,W,GAvDW+C,aA6DJ0F,eAAWC,mBAlFF,SAAA1E,GACtB,MAAO,CACL3D,OAAQ2D,EAAM3D,OACdoF,SAAUzB,EAAMyB,SAChByC,WAAYlE,EAAMkE,WAClBjF,QAASe,EAAMf,YAIQ,SAAC0F,GAAD,MAAe,CAExCjD,YAAa,SAACC,EAAQa,EAAQV,EAAQD,GAAzB,OAAqC8C,EFjBzB,SAAChD,EAAQa,EAAQV,EAAQD,GAAzB,OAAqC,SAAC8C,GAE7D,IAAMC,EAAa,CACfjD,OAAQA,EACRa,OAAQA,EACRV,OAAQA,EACRD,QAASA,GAIb,OAFA+C,EAAWtC,MAAO,IAAID,MAAOwC,cAEtBC,MAAMxK,EAAU,WAAY,CAC/ByK,OAAQ,OACRvF,KAAMwF,KAAKC,UAAUL,GACrBM,QAAS,CACL,eAAgB,oBAEpBC,YAAa,gBAEZC,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,QAAUH,EAASI,OAAS,IAAMJ,EAASK,YAEjE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACI,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIV,EApCA,SAAC9C,GAAD,MAAc,CACpChD,KCJuB,cDKvBgE,QAAShB,GAkCsB+D,CAAWP,OACrCQ,OAAM,SAAAN,GAAWlF,MAAM,oCAAsCkF,EAAMO,aEffpE,CAAYC,EAAQa,EAAQV,EAAQD,KAC/F0B,YAAa,WAAQoB,GFiBU,SAACA,GAG9B,OAFAA,EAASpJ,GAAc,IAEhBuJ,MAAMxK,EAAU,UAClB8K,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,QAAUH,EAASI,OAAS,IAAMJ,EAASK,YAEjE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMO,YAGrCV,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA/I,GAAM,OAAIsI,EAAS7B,EAAUzG,OAClCwJ,OAAM,SAAAN,GAAK,OAAIZ,EAAShC,EAAa4C,EAAMO,iBEnClDrI,kBAAmB,WAAOkH,EAASoB,UAAQC,MAAM,cACjDxC,cAAe,WAAQmB,GFqDU,SAACA,GAChC,OAAOG,MAAMxK,EAAU,YAClB8K,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,QAAUH,EAASI,OAAS,IAAMJ,EAASK,YAEjE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMO,YAGrCV,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA3D,GAAQ,OAAIkD,EAAS3B,EAAYvB,OACtCoE,OAAM,SAAAN,GAAK,OAAIZ,EAAS5B,EAAewC,EAAMO,iBErEpDrC,YAAa,WAAQkB,GFkFU,SAACA,GAI9B,OAFAA,EAASjJ,KAEFoJ,MAAMxK,EAAU,cAClB8K,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,QAAUH,EAASI,OAAS,IAAMJ,EAASK,YAEjE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMO,YAGrCV,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAjC,GAAM,OAAIwB,EAASzB,EAAUC,OAClC0C,OAAM,SAAAN,GAAK,OAAIZ,EAAS1B,EAAasC,EAAMO,iBErGlDpC,aAAc,WAAQiB,GFsHU,SAACA,GAI/B,OAFAA,EAAS9I,KAEFiJ,MAAMxK,EAAU,WAClB8K,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,QAAUH,EAASI,OAAS,IAAMJ,EAASK,YAEjE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMO,YAGrCV,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAnG,GAAO,OAAI0F,EAAStB,EAAWpE,OACpC4G,OAAM,SAAAN,GAAK,OAAIZ,EAASvB,EAAcmC,EAAMO,iBEzInDpI,aAAc,SAACuI,GAAD,OAActB,EF4JF,SAACsB,GAAD,OAAc,WAEtC,IAAMC,EAAW,aAAK5D,MAAM,IAAID,MAAOwC,eAAkBoB,GAEzD,OAAOnB,MAAMxK,EAAU,WAAY,CAC/ByK,OAAQ,OACRvF,KAAMwF,KAAKC,UAAUiB,GACrBhB,QAAS,CACL,eAAgB,oBAEpBC,YAAa,gBAEZC,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,QAAUH,EAASI,OAAS,IAAMJ,EAASK,YAEjE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACI,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIhF,MAAM,gCAAkC2E,KAAKC,UAAUI,OAC5EQ,OAAM,SAAAN,GAAWlF,MAAM,6CAA+CkF,EAAMO,aEtL1CpI,CAAauI,QAiE1BvB,CAA6CpB,I,SC9F1D6C,GAAS,WAIP,IAJQnG,EAIT,uDAJiB,CAC3BvF,WAAW,EACXC,QAAS,KACT2B,OAAQ,IACT+J,EAAW,uCACV,OAAQA,EAAOvH,MACX,IFLkB,aEMd,OAAO,2BACAmB,GADP,IACcvF,WAAW,EAAOC,QAAS,KAAM2B,OAAQ+J,EAAOvD,UAGlE,IFZsB,iBEalB,OAAO,2BACA7C,GADP,IACcvF,WAAW,EAAMC,QAAS,KAAM2B,OAAQ,KAG1D,IFhBqB,gBEiBjB,OAAO,2BACA2D,GADP,IACcvF,WAAW,EAAOC,QAAS0L,EAAOvD,QAASxG,OAAQ,KAGrE,QACI,OAAO2D,ICtBNqG,GAAW,WAAoD,IAAnDrG,EAAkD,uDAA1C,CAAEtF,QAAS,KAAM+G,SAAS,IAAK2E,EAAW,uCACzE,OAAQA,EAAOvH,MACb,IHAwB,eGCtB,OAAO,2BAAImB,GAAX,IAAkBtF,QAAS,KAAM+G,SAAU2E,EAAOvD,UAEpD,IHF2B,kBGGzB,OAAO,2BAAI7C,GAAX,IAAkBtF,QAAS0L,EAAOvD,UAEpC,IHVuB,cGWnB,IAAIhB,EAAUuE,EAAOvD,QACrB,OAAO,2BAAK7C,GAAZ,IAAmByB,SAAUzB,EAAMyB,SAAS6E,OAAOzE,KAEvD,QACE,OAAO7B,ICbAuG,GAAa,WAE0C,IAFzCvG,EAEwC,uDAF/B,CAAEvF,WAAW,EACTC,QAAS,KACTwJ,WAAW,IAAKkC,EAAW,uCAC/D,OAAQA,EAAOvH,MACX,IJCkB,aIAlB,OAAO,2BAAImB,GAAX,IAAkBvF,WAAW,EAAOC,QAAS,KAAMwJ,WAAYkC,EAAOvD,UAEtE,IJHsB,iBIIlB,OAAO,2BAAI7C,GAAX,IAAkBvF,WAAW,EAAMC,QAAS,KAAMwJ,WAAY,KAElE,IJJqB,gBIKjB,OAAO,2BAAIlE,GAAX,IAAkBvF,WAAW,EAAOC,QAAS0L,EAAOvD,UAExD,QACE,OAAO7C,ICdJwG,GAAU,WAIR,IAJSxG,EAIV,uDAJkB,CAC5BvF,WAAW,EACXC,QAAS,KACTuE,QAAS,IACVmH,EAAW,uCACV,OAAQA,EAAOvH,MACX,ILEmB,iBKDf,OAAO,2BACAmB,GADP,IACcvF,WAAW,EAAOC,QAAS,KAAMuE,QAASmH,EAAOvD,UAGnE,ILJuB,kBKKnB,OAAO,2BACA7C,GADP,IACcvF,WAAW,EAAMC,QAAS,KAAMuE,QAAS,KAG3D,ILPsB,iBKQlB,OAAO,2BACAe,GADP,IACcvF,WAAW,EAAOC,QAAS0L,EAAOvD,QAAS5D,QAAS,KAGtE,QACI,OAAOe,I,wCCxBNyG,GAAkB,CAC3BC,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,OAAO,EACPC,YAAa,OACbjB,QAAS,ICAPkB,GCIYC,uBACVC,2BAAgB,aACZ7K,OAAQ8J,GACR1E,SAAU4E,GACVnC,WAAYqC,GACZtH,QAASuH,IACNW,sBAAa,CACZlB,SAAUQ,OAGlBW,2BAAgBC,KAAMC,ODIfC,G,4JAdb,WACE,OAEE,kBAAC,WAAD,CAAUP,MAASA,IACnB,kBAAC,IAAD,KACA,yBAAK3M,UAAU,OACb,kBAAC,GAAD,a,GARU0E,aEGZyI,GAAcC,QACa,cAA7BC,OAAO/D,SAASgE,UAEe,UAA7BD,OAAO/D,SAASgE,UAEhBD,OAAO/D,SAASgE,SAAStD,MACvB,2DAsCN,SAASuD,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTzC,MAAK,SAAA8C,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpI,QACf+H,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,iHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,WAO5BrC,OAAM,SAAAN,GACLiD,QAAQjD,MAAM,4CAA6CA,MCvFnEqD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDSjB,SAAkBlB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,GAAwBxB,OAAO/D,SAAShG,MACpDwL,SAAWzB,OAAO/D,SAASwF,OAIvC,OAGFzB,OAAO0B,iBAAiB,QAAQ,WAC9B,IAAMvB,EAAK,UAAMqB,GAAN,sBAEP1B,KAgEV,SAAiCK,EAAOC,GAEtChD,MAAM+C,EAAO,CACX3C,QAAS,CAAE,iBAAkB,YAE5BE,MAAK,SAAAC,GAEJ,IAAMgE,EAAchE,EAASH,QAAQoE,IAAI,gBAEnB,MAApBjE,EAASI,QACO,MAAf4D,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CxB,UAAUC,cAAcwB,MAAMpE,MAAK,SAAA8C,GACjCA,EAAauB,aAAarE,MAAK,WAC7BsC,OAAO/D,SAAS+F,eAKpB9B,GAAgBC,EAAOC,MAG1BjC,OAAM,WACL2C,QAAQC,IACN,oEAvFAkB,CAAwB9B,EAAOC,GAI/BC,UAAUC,cAAcwB,MAAMpE,MAAK,WACjCoD,QAAQC,IACN,iHAMJb,GAAgBC,EAAOC,OC9BjCE,I","file":"static/js/main.3a492ba3.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div>\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"/>\r\n            <p>Loading...</p>\r\n        </div>\r\n    );\r\n}","export const baseUrl = 'http://localhost:3001/';","import React from \"react\";\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n   \r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n        <FadeTransform in transformProps ={{\r\n            exitTransform: 'scale(0.5) translateY(-50%)'\r\n        }}>\r\n        <Card>\r\n            <CardImg src={baseUrl + item.image} alt={item.name}/>\r\n            <CardBody>\r\n                <CardTitle>{item.name}</CardTitle>\r\n                {item.designation?<CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                <CardText> {item.description} </CardText>\r\n            </CardBody>\r\n        </Card>\r\n        </FadeTransform>\r\n        );\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-item-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promosLoading} errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({ dish }) {\r\n    return (\r\n        <Card >\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl+ dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle><strong>{dish.name}</strong></CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish} ></RenderMenuItem>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\"> \r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Menu</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {menu}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Menu;","import React, { Component } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors,} from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.resetformFeedback();\r\n        this.props.postFeedback(values);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            < div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information </h3>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model = \"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row >\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row >\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row >\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: ' Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row >\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\" /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div >\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row >\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".meassage\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row >\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row >\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Loading } from './LoadingComponent';\r\nimport {Stagger, Fade} from 'react-animation-components';\r\n\r\nfunction RenderLeaders({leaders, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <Media list>\r\n                <Stagger in>\r\n                    {leaders.map((leader) => <Fade in><RenderLeader key={leader.id} leader={leader} /></Fade>)}            \r\n                </Stagger>\r\n            </Media>            \r\n        );    \r\n    }\r\n}\r\n\r\n\r\n\r\nfunction RenderLeader({ leader }) {\r\n    return (\r\n        <div key={leader.id} className=\"col-12 mt-5\">\r\n            <Media tag=\"li\">\r\n                <Media left middle>\r\n                    <Media object src={baseUrl+leader.image} alt={leader.name} />\r\n                </Media>\r\n                <Media body className=\"ml-5\">\r\n                    <Media heading>{leader.name}</Media>\r\n                    <p>{leader.designation}</p>\r\n                    <p>{leader.description}</p>\r\n                </Media>\r\n            </Media>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = <RenderLeaders leaders={props.leaders.leaders}\r\n        isLoading={props.leaders.isLoading}\r\n        errMess={props.leaders.errMess} />;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                        P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                {leaders}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React, { Component } from \"react\";\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Modal, ModalHeader, ModalBody, Button, FormGroup, Label, Form, Input, Jumbotron } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \"Password: \" + this.password.value \r\n        + \"Rmember: \" + this.remember.checked );\r\n        event.preventDefault();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/home'>\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'>\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/menu'>\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'>\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen = {this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}   >Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"usernmae\" name=\"username\" innerRef={(input) => this.username = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input} />\r\n                                    Remember Me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                    <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>{'  '}\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>{'  '}\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>{'  '}\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>{'  '}\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>{'  '}\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <br/>\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Modal, ModalHeader, ModalBody, Button, Label, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\n\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst required = (val) => val && val.length;\r\n\r\n\r\nfunction RenderDish({ dish }) {\r\n    if (dish != null)\r\n        return (\r\n            <div className='col-12 col-md-5 m-1'>\r\n                <FadeTransform in\r\n                    transformProps={{\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}>\r\n                    <Card>\r\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle><h6>{dish.name}</h6></CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>\r\n        );\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n    if (comments == null) {\r\n        return (<div></div>)\r\n    }\r\n    const cmnts = comments.map(comment => {\r\n        return (\r\n            <Fade in>\r\n            <li key={comment.id}>\r\n                <p>{comment.comment}</p>\r\n                <p>-- {comment.author},\r\n                    &nbsp;\r\n                    {new Intl.DateTimeFormat('en-US', {\r\n                        year: 'numeric',\r\n                        month: 'short',\r\n                        day: '2-digit'\r\n                    }).format(new Date(comment.date))}\r\n                </p>\r\n            </li>\r\n            </Fade>\r\n        )\r\n    })\r\n    return (\r\n        <div className='col-12 col-md-5 m-1'>\r\n            <h4> Comments </h4>\r\n            <ul className='list-unstyled'>\r\n                <Stagger in>\r\n                {cmnts}\r\n                </Stagger>\r\n            </ul>\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n        </div>\r\n    )\r\n}\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}   >Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n\r\n                            <Col className=\"form-group\">\r\n                                <Label htmlFor=\"Rating\" >Rating</Label>\r\n                                <Control.select model=\".rating\" name=\"rating\"\r\n                                    className=\"form-control\" validators={{ required }} defaultValue=\"0\">\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                    <option value=\"0\">Select Rating</option>\r\n                                </Control.select>\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".rating\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'required'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col className=\"form-group\" >\r\n                                <Label htmlFor=\"yourname\" >Your Name</Label>\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                    placeholder=\"Your Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".yourname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n\r\n                            </Col>\r\n\r\n                            <Col className=\"form-group\">\r\n                                <Label htmlFor=\"message\" >Comment</Label>\r\n                                <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                    rows=\"6\"\r\n                                    className=\"form-control\" />\r\n                            </Col>\r\n\r\n                            <Col className=\"form-group\">\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                </Button>\r\n                            </Col>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n\r\n\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className='conatiner'>\r\n                <div className='row'>\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className='conatiner'>\r\n                <div className='row'>\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else if (props.dish != null)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id} />\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n}\r\n\r\nexport default DishDetail;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response;\r\n            else {\r\n                var error = new Error('Error' + response.status + \":\" + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => { alert(\"Comment cannot be added \\nError: \" + error.message) });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response;\r\n            else {\r\n                var error = new Error('Error' + response.status + \":\" + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n\r\n\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response;\r\n            else {\r\n                var error = new Error('Error' + response.status + \":\" + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response;\r\n            else {\r\n                var error = new Error('Error' + response.status + \":\" + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response;\r\n            else {\r\n                var error = new Error('Error' + response.status + \":\" + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\n\r\n\r\nexport const postFeedback = (feedback) => () => {\r\n\r\n    const newFeedback = { date: new Date().toISOString(), ...feedback };\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response;\r\n            else {\r\n                var error = new Error('Error' + response.status + \":\" + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => alert('Thank you for your feedback! ' + JSON.stringify(response)))\r\n    .catch(error => { alert('Your feedback could not be posted\\nError: ' + error.message)})\r\n};\r\n\r\n\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'LEADERS_PROMOS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\n","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchPromos, fetchComments, fetchLeaders, postFeedback} from '../redux/ActionCreaters';\r\nimport { actions } from 'react-redux-form';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes()) },\r\n  resetformFeedback: () => {dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => { dispatch(fetchComments()) },\r\n  fetchPromos: () => { dispatch(fetchPromos()) },\r\n  fetchLeaders: () => { dispatch(fetchLeaders())},\r\n  postFeedback: (feedback) => dispatch(postFeedback(feedback))\r\n});\r\n\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return (\r\n        <Home\r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promosLoading={this.props.promotions.isLoading}\r\n          promosErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leadersLoading={this.props.leaders.isLoading}\r\n          leadersErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <DishDetail\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId))}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300} >\r\n        <Switch>\r\n          <Route path='/home' component={HomePage} />\r\n          <Route path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n          <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n          <Route path='/menu/:dishId' component={DishWithId} />\r\n          <Route path='/contactus' component={ () => <Contact postFeedback={this.props.postFeedback} resetformFeedback={this.props.resetformFeedback}/>} />\r\n          <Redirect to='/home' />\r\n        </Switch>\r\n        </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {\r\n                ...state, isLoading: false, errMess: null, dishes: action.payload\r\n            };\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {\r\n                ...state, isLoading: true, errMess: null, dishes: []\r\n            };\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {\r\n                ...state, isLoading: false, errMess: action.payload, dishes: []\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n}; \r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { \r\n                ...state, isLoading: false, errMess: null, leaders: action.payload\r\n            };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { \r\n                ...state, isLoading: true, errMess: null, leaders: [] \r\n            };\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { \r\n                ...state, isLoading: false, errMess: action.payload, leaders: []\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import './App.css';\nimport Main from './components/MainComponent';\nimport React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConfigureStore } from './redux/configureStore';\nimport { Provider } from 'react-redux';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n\n      <Provider store = {store} >\n      <BrowserRouter>\n      <div className='App'>\n        <Main/>\n      </div >\n      </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './form';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms ({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk,logger)\r\n\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.register();\n"],"sourceRoot":""}